Lez 27 Ottobre 22 (da 1h58 in poi, argomento Spring JPA)

Progetto Spring JPA   

Andiamo su Spring Initializer https://start.spring.io/ a creare il progetto. Metto nome, Maven; Java;
 aggiungo le dipendenze: Spring Data JPA, Lombok, PostgreSQL Driver.
 Generate. Il file è in formato zip, si deve estrarre, per poi importarlo.
 
Su Eclipse: Import existing Maven project.

Ci servirà un Database da collegare. Lo andiamo a creare su PGAdmin.Lo chiamo spring-jpa1


Su Eclipse andiamo ad impostare la Application.properties (dentro src/main/resources).
Da incollare:
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/spring-jpa1 
spring.datasource.username=postgres
spring.datasource.password=*lamiapassworddiPGAdmin*
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto = update


(spring-jpa1 è il nome del database che ho creato su PGAdmin)

Per vedere se è tutto ok, vado nella "Application" (dentro src/main/java)
e faccio un System.out.println("Hello bb!"), 
poi faccio Run as "Spring Boot App". (Potrebbero insorgere errori perchè
magari non abbiamo scritto tutto bene nellaapplication.properties, ad es
il nome del database o la password di PGAdmin. (Se la Console no si apre sola
vai su Window->Show view->Console).

Dentro src/main/java facciamo dei nuovi Package.
Ne creo uno per le Entities.


2h3min

Per vedere come scrive le classi User e Address andare a 40min(fino a 50min).
Le classi User e Address servono a creare le mappature nel database.
Il decoratore @Builder serve per rappresentare i costruttori.

2h4min
Creiamo il Package .repositories
-Creo una Interfaccia "UserRepository<User, Integer>". Estende una interfaccia JpaRepository.
User è il tipo che va a mappar; Integer il tipo dell'id.



























